// Fuente bitmap sencilla para mostrar FPS y textos cortos.

pub fn draw_text_small(frame: &mut [u8], w: i32, h: i32, x: i32, y: i32, text: &str, color: [u8;4]) {
    let mut cx = x;
    for ch in text.chars() {
        if ch == '\n' {
            cx = x;
            continue;
        }
        draw_char_small(frame, w, h, cx, y, ch, color);
        cx += 6;
    }
}

fn draw_char_small(frame: &mut [u8], w: i32, h: i32, x: i32, y: i32, ch: char, color: [u8;4]) {
    let pattern = match ch {
        'A'..='Z' => FONT[(ch as u8 - b'A') as usize + 10],
        'a'..='z' => FONT[(ch as u8 - b'a') as usize + 10],
        '0'..='9' => FONT[(ch as u8 - b'0') as usize],
        ':' => FONT[36],
        '.' => FONT[37],
        '-' => FONT[38],
        '!' => FONT[39],
        ' ' => EMPTY,
        _ => EMPTY,
    };
    for (row, bits) in pattern.iter().enumerate() {
        for col in 0..5 {
            if (bits >> (4 - col)) & 1 == 1 {
                let px = x + col as i32;
                let py = y + row as i32;
                if px >= 0 && py >= 0 && px < w && py < h {
                    let idx = ((py * w + px) * 4) as usize;
                    frame[idx..idx + 4].copy_from_slice(&color);
                }
            }
        }
    }
}

const EMPTY: [u8; 7] = [0; 7];

// 0-9, a-z compactos 5x7
const FONT: [[u8; 7]; 40] = [
    // 0-9
    [0b01110,0b10001,0b10011,0b10101,0b11001,0b10001,0b01110], // 0
    [0b00100,0b01100,0b00100,0b00100,0b00100,0b00100,0b01110], // 1
    [0b01110,0b10001,0b00001,0b00110,0b01000,0b10000,0b11111], // 2
    [0b11110,0b00001,0b00001,0b01110,0b00001,0b00001,0b11110], // 3
    [0b00010,0b00110,0b01010,0b10010,0b11111,0b00010,0b00010], // 4
    [0b11111,0b10000,0b11110,0b00001,0b00001,0b10001,0b01110], // 5
    [0b00110,0b01000,0b10000,0b11110,0b10001,0b10001,0b01110], // 6
    [0b11111,0b00001,0b00010,0b00100,0b01000,0b01000,0b01000], // 7
    [0b01110,0b10001,0b10001,0b01110,0b10001,0b10001,0b01110], // 8
    [0b01110,0b10001,0b10001,0b01111,0b00001,0b00010,0b01100], // 9
    // a-z (o versión mayúscula simplificada)
    [0b00000,0b01110,0b00001,0b01111,0b10001,0b10011,0b01101], // a/A
    [0b10000,0b10000,0b11110,0b10001,0b10001,0b10001,0b11110], // b/B
    [0b00000,0b01110,0b10001,0b10000,0b10000,0b10001,0b01110], // c/C
    [0b00001,0b00001,0b01111,0b10001,0b10001,0b10001,0b01111], // d/D
    [0b00000,0b11111,0b10000,0b11110,0b10000,0b10000,0b11111], // e/E
    [0b11111,0b10000,0b11110,0b10000,0b10000,0b10000,0b10000], // f/F
    [0b00000,0b01110,0b10000,0b10000,0b10011,0b10001,0b01111], // g/G
    [0b10001,0b10001,0b11111,0b10001,0b10001,0b10001,0b10001], // h/H
    [0b01110,0b00100,0b00100,0b00100,0b00100,0b00100,0b01110], // i/I
    [0b00001,0b00001,0b00001,0b00001,0b10001,0b10001,0b01110], // j/J
    [0b10001,0b10010,0b10100,0b11000,0b10100,0b10010,0b10001], // k/K
    [0b10000,0b10000,0b10000,0b10000,0b10000,0b10000,0b11111], // l/L
    [0b10001,0b11011,0b10101,0b10101,0b10001,0b10001,0b10001], // m/M
    [0b10001,0b11001,0b10101,0b10011,0b10001,0b10001,0b10001], // n/N
    [0b01110,0b10001,0b10001,0b10001,0b10001,0b10001,0b01110], // o/O
    [0b11110,0b10001,0b10001,0b11110,0b10000,0b10000,0b10000], // p/P
    [0b01110,0b10001,0b10001,0b10001,0b10101,0b10010,0b01101], // q/Q
    [0b11110,0b10001,0b10001,0b11110,0b10100,0b10010,0b10001], // r/R
    [0b01111,0b10000,0b10000,0b01110,0b00001,0b00001,0b11110], // s/S
    [0b11111,0b00100,0b00100,0b00100,0b00100,0b00100,0b00100], // t/T
    [0b10001,0b10001,0b10001,0b10001,0b10001,0b10011,0b01101], // u/U
    [0b10001,0b10001,0b10001,0b01010,0b01010,0b00100,0b00100], // v/V
    [0b10001,0b10001,0b10101,0b10101,0b10101,0b11011,0b10001], // w/W
    [0b10001,0b01010,0b00100,0b00100,0b00100,0b01010,0b10001], // x/X
    [0b10001,0b01010,0b00100,0b00100,0b00100,0b00100,0b00100], // y/Y
    [0b11111,0b00001,0b00010,0b00100,0b01000,0b10000,0b11111], // z/Z
    // símbolos básicos
    [0b00000,0b00000,0b00000,0b00000,0b00100,0b00000,0b00000], // :
    [0b00000,0b00000,0b00000,0b00000,0b00000,0b00110,0b00110], // .
    [0b00000,0b00000,0b00000,0b11111,0b00000,0b00000,0b00000], // -
    [0b00100,0b00100,0b00100,0b00100,0b00000,0b00000,0b00100], // !
];